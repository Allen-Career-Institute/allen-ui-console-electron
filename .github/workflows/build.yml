name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --immutable

    - name: Setup Electron Forge
      run: npx electron-forge import

    - name: Build application
      run: yarn make
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        SENTRY_DSN_DEV: ${{ secrets.SENTRY_DSN_DEV }}
        NODE_ENV: production
        APP_VERSION: ${{ github.ref_name }}

    - name: Upload source maps to Sentry
      if: runner.os == 'Linux'
      run: |
        npx @sentry/cli releases new ${{ github.ref_name }}
        npx @sentry/cli releases files ${{ github.ref_name }} upload-sourcemaps src/ --url-prefix '~/src/'
        npx @sentry/cli releases finalize ${{ github.ref_name }}
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-build
        path: |
          out/
          !out/**/*.blockmap

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/*-build/out/**/*.zip
          artifacts/*-build/out/**/*.dmg
          artifacts/*-build/out/**/*.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  code-sign-macos:
    needs: build
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-latest-build
        path: artifacts

    - name: Code sign macOS app
      run: |
        # Code signing for macOS
        codesign --force --deep --sign "Developer ID Application: Your Name" artifacts/out/make/zip/darwin/x64/Allen UI Console.app
      env:
        CSC_LINK: ${{ secrets.CSC_LINK }}
        CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

    - name: Notarize macOS app
      run: |
        # Notarization for macOS
        xcrun altool --notarize-app --primary-bundle-id "com.allendigital.allen-ui-console" --username "${{ secrets.APPLE_ID }}" --password "${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}" --file artifacts/out/make/zip/darwin/x64/Allen UI Console.app
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

  code-sign-windows:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-latest-build
        path: artifacts

    - name: Code sign Windows app
      run: |
        # Code signing for Windows
        signtool sign /f ${{ secrets.WINDOWS_CERT_FILE }} /p ${{ secrets.WINDOWS_CERT_PASSWORD }} artifacts/out/make/squirrel.windows/x64/Allen UI Console.exe
      env:
        WINDOWS_CERT_FILE: ${{ secrets.WINDOWS_CERT_FILE }}
        WINDOWS_CERT_PASSWORD: ${{ secrets.WINDOWS_CERT_PASSWORD }}
