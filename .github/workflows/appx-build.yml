name: Build AppX for Windows Store

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 1.0.0) - leave empty for current version'
        required: false
        type: string
      publish_to_store:
        description: 'Publish to Windows Store (requires store credentials)'
        required: false
        default: false
        type: boolean
  push:
    tags:
      - 'v*'
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  NODE_VERSION: '18'
  YARN_VERSION: '4.9.2'
  NODE_ENV: production
  STAGE_URL: ${{ secrets.STAGE_CONSOLE_URL }}
  PROD_URL: ${{ secrets.PROD_CONSOLE_URL }}
  CUSTOM_URL: ${{ secrets.CUSTOM_CONSOLE_URL }}
  ASTRA_ELECTRON_SENTRY_DSN: ${{ secrets.ASTRA_ELECTRON_SENTRY_DSN }}
  ASTRA_ELECTRON_SENTRY_ENDPOINT: ${{ secrets.ASTRA_ELECTRON_SENTRY_ENDPOINT }}

# Cancel in-progress jobs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Check permissions first
  check-permissions:
    runs-on: ubuntu-latest
    outputs:
      has-permissions: ${{ steps.perms.outputs.level }}
    steps:
      - name: Check repository permissions
        id: perms
        uses: actions/github-script@v7
        with:
          script: |
            const { data: permissions } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });
            core.setOutput('level', permissions.permission);
            console.log(`User ${context.actor} has ${permissions.permission} permission`);

  build-appx:
    runs-on: windows-latest
    timeout-minutes: 45
    # Only run if not a fork and user has write access, or on tags
    if: |
      startsWith(github.ref, 'refs/tags/') ||
      (github.event_name == 'workflow_dispatch' && 
       !github.event.repository.fork && 
       contains(fromJson('["write", "admin", "maintain"]'), needs.check-permissions.outputs.has-permissions)) ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    needs: check-permissions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install --immutable
        timeout-minutes: 10

      - name: Build TypeScript
        run: yarn build:ts
        timeout-minutes: 5

      - name: Build renderer
        run: yarn renderer:build
        timeout-minutes: 5

      - name: Setup AppX certificates (Windows)
        run: |
          # Create certificates directory
          mkdir -p certificates

          # Decode and create Windows certificate for AppX signing
          if [ "${{ secrets.WINDOWS_APPX_CERTIFICATE_BASE64 }}" != "" ]; then
            echo "${{ secrets.WINDOWS_APPX_CERTIFICATE_BASE64 }}" | base64 -d > certificates/windows_appx_certificate.pfx
            echo "Windows AppX certificate created"
          fi

          # Set certificate environment variables for AppX
          if [ -f "certificates/windows_appx_certificate.pfx" ]; then
            echo "CSC_LINK=certificates/windows_appx_certificate.pfx" >> $GITHUB_ENV
          fi

      - name: Build AppX package
        run: yarn dist:win-appx
        timeout-minutes: 25
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ env.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - name: Upload AppX artifacts
        uses: actions/upload-artifact@v4
        timeout-minutes: 5
        with:
          name: astra-electron-appx
          path: |
            dist-electron-builder/*.appx
            dist-electron-builder/*.appx.blockmap
          retention-days: 90

  # Optional: Publish to Windows Store (requires store credentials)
  publish-to-store:
    if: |
      github.event.inputs.publish_to_store == 'true' &&
      !github.event.repository.fork &&
      contains(fromJson('["write", "admin", "maintain"]'), needs.check-permissions.outputs.has-permissions)
    runs-on: windows-latest
    timeout-minutes: 30
    needs: [check-permissions, build-appx]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download AppX artifacts
        uses: actions/download-artifact@v4
        with:
          name: astra-electron-appx
          path: appx-files

      - name: Setup Windows Store credentials
        run: |
          # Create store credentials file
          mkdir -p store-credentials
          
          if [ "${{ secrets.WINDOWS_STORE_CLIENT_ID }}" != "" ]; then
            echo "Setting up Windows Store credentials..."
            echo "${{ secrets.WINDOWS_STORE_CLIENT_ID }}" > store-credentials/client_id.txt
            echo "${{ secrets.WINDOWS_STORE_CLIENT_SECRET }}" > store-credentials/client_secret.txt
            echo "${{ secrets.WINDOWS_STORE_TENANT_ID }}" > store-credentials/tenant_id.txt
          fi

      - name: Publish to Windows Store
        run: |
          # This step would use the Windows Store API or tools to publish
          # For now, we'll just log that this step would publish
          echo "AppX package ready for Windows Store publishing:"
          ls -la appx-files/
          echo "To publish to Windows Store, use the AppX file with Windows Store submission tools"
        env:
          WINDOWS_STORE_CLIENT_ID: ${{ secrets.WINDOWS_STORE_CLIENT_ID }}
          WINDOWS_STORE_CLIENT_SECRET: ${{ secrets.WINDOWS_STORE_CLIENT_SECRET }}
          WINDOWS_STORE_TENANT_ID: ${{ secrets.WINDOWS_STORE_TENANT_ID }}

  # Create AppX release (for manual distribution or testing)
  create-appx-release:
    if: |
      startsWith(github.ref, 'refs/tags/') &&
      !github.event.repository.fork &&
      contains(fromJson('["write", "admin", "maintain"]'), needs.check-permissions.outputs.has-permissions)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [check-permissions, build-appx]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download AppX artifacts
        uses: actions/download-artifact@v4
        with:
          name: astra-electron-appx
          path: appx-files

      - name: Create AppX Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: AppX Release ${{ github.ref_name }}
          body: |
            ## Allen UI Console Electron AppX ${{ github.ref_name }}

            ### Windows Store Package
            - **AppX Package:** Ready for Windows Store submission
            - **Architecture:** x64
            - **Build Tool:** Electron Builder AppX

            ### Installation
            This AppX package can be installed on Windows 10/11 for testing or distributed through the Windows Store.

            ### Build Info
            - **Build Tool:** Electron Builder
            - **Node.js:** 18
            - **Platform:** Windows x64
            - **Commit:** ${{ github.sha }}

            ### Next Steps
            1. Test the AppX package on Windows devices
            2. Submit to Windows Store for review
            3. Publish to Windows Store when approved
          files: |
            appx-files/*.appx
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
