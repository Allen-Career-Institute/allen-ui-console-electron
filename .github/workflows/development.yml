name: Development Build

on:
  push:
    branches: [develop]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  YARN_VERSION: '4.9.2'

# Cancel in-progress jobs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Check permissions first
  check-permissions:
    runs-on: ubuntu-latest
    outputs:
      has-permissions: ${{ steps.perms.outputs.level }}
    steps:
      - name: Check repository permissions
        id: perms
        uses: actions/github-script@v7
        with:
          script: |
            const { data: permissions } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });
            core.setOutput('level', permissions.permission);
            console.log(`User ${context.actor} has ${permissions.permission} permission`);

  build:
    runs-on: windows-latest
    timeout-minutes: 45
    # Only run if not a fork and user has write access
    if: |
      (github.event_name == 'push' || 
       (github.event_name == 'workflow_dispatch' && 
        !github.event.repository.fork && 
        contains(fromJson('["write", "admin", "maintain"]'), needs.check-permissions.outputs.has-permissions)))
    needs: check-permissions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable
        timeout-minutes: 10

      - name: Build TypeScript
        run: yarn build:ts
        timeout-minutes: 5

      - name: Build renderer
        run: yarn renderer:build
        timeout-minutes: 5

      - name: Build Electron app
        run: yarn dist:win-installer
        timeout-minutes: 25
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: development
          STAGE_URL: ${{ secrets.STAGE_CONSOLE_URL }}
          PROD_URL: ${{ secrets.PROD_CONSOLE_URL }}
          CUSTOM_URL: ${{ secrets.CUSTOM_CONSOLE_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        timeout-minutes: 5
        with:
          name: allen-ui-console-dev-win32-x64
          path: |
            dist-electron-builder/
            !dist-electron-builder/**/*.blockmap
          retention-days: 30

      - name: Create build summary
        run: |
          echo "## Development Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform:** Windows (x64)" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status:** âœ… Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Tool:** Electron Builder" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** Development" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifacts:** Available for download above" >> $GITHUB_STEP_SUMMARY
          echo "- **Retention:** 30 days" >> $GITHUB_STEP_SUMMARY

  create-dev-release:
    needs: [build, check-permissions]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: |
      github.ref == 'refs/heads/develop' && 
      !github.event.repository.fork &&
      contains(fromJson('["write", "admin", "maintain"]'), needs.check-permissions.outputs.has-permissions)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Development Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dev-${{ github.run_number }}
          name: Development Build ${{ github.run_number }}
          body: |
            ## Development Build ${{ github.run_number }}

            ### Downloads
            - **Windows (64-bit):** Installer (.exe)

            ### Build Info
            - **Build Tool:** Electron Builder
            - **Node.js:** 18
            - **Environment:** Development
            - **Commit:** ${{ github.sha }}
            - **Branch:** ${{ github.ref_name }}

            ### Note
            This is a development build for Windows 64-bit only. For production releases, see the main releases.
          files: |
            artifacts/allen-ui-console-dev-win32-x64/dist-electron-builder/*
          draft: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
