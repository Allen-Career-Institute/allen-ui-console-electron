name: PR Build

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18'
  YARN_VERSION: '4.9.2'
  NODE_ENV: stage

# Cancel in-progress jobs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Check permissions first
  check-permissions:
    runs-on: ubuntu-latest
    outputs:
      has-permissions: ${{ steps.perms.outputs.level }}
    steps:
      - name: Check repository permissions
        id: perms
        uses: actions/github-script@v7
        with:
          script: |
            const { data: permissions } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });
            core.setOutput('level', permissions.permission);
            console.log(`User ${context.actor} has ${permissions.permission} permission`);

  build:
    runs-on: windows-latest
    timeout-minutes: 45
    # Only run if not a fork and user has write access
    if: |
      !github.event.pull_request.head.repo.fork && 
      contains(fromJson('["write", "admin", "maintain"]'), needs.check-permissions.outputs.has-permissions)
    needs: check-permissions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable
        timeout-minutes: 10

      - name: Build TypeScript
        run: yarn build:ts
        timeout-minutes: 5
        env:
          NODE_ENV: stage
          STAGE_URL: ${{ secrets.STAGE_CONSOLE_URL }}
          PROD_URL: ${{ secrets.PROD_CONSOLE_URL }}
          CUSTOM_URL: "https://allen-ic-stage-ui-live-web-pr-709-allen-frontend-team.vercel.app"

      - name: Build renderer
        run: yarn renderer:build
        timeout-minutes: 5
        env:
          NODE_ENV: stage
          STAGE_URL: ${{ secrets.STAGE_CONSOLE_URL }}
          PROD_URL: ${{ secrets.PROD_CONSOLE_URL }}
          CUSTOM_URL: "https://allen-ic-stage-ui-live-web-pr-709-allen-frontend-team.vercel.app"

      - name: Build Electron app (Installer)
        run: yarn dist:win-installer
        timeout-minutes: 25
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: stage
          STAGE_URL: ${{ secrets.STAGE_CONSOLE_URL }}
          PROD_URL: ${{ secrets.PROD_CONSOLE_URL }}
          CUSTOM_URL: "https://allen-ic-stage-ui-live-web-pr-709-allen-frontend-team.vercel.app"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        timeout-minutes: 5
        with:
          name: allen-ui-console-win32-x64-pr-${{ github.event.number }}
          path: |
            dist-electron-builder/
            !dist-electron-builder/**/*.blockmap
          retention-days: 2

      - name: Create build summary
        run: |
          echo "## Build Summary for PR #${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Platforms:** Windows (x64 only)" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status:** âœ… Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Tool:** Electron Builder" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifacts:** Available for download above" >> $GITHUB_STEP_SUMMARY
          echo "- **Retention:** 30 days" >> $GITHUB_STEP_SUMMARY
